@inherits LayoutComponentBase
    <div class="row">
        <div class="sidebar col-md-4">
            <NavigationMenuComponent />
        </div>

        <div class="main col-md-8">
            <div class="top-row">
                <span>
                    <AuthorizeView>
                        <Authorized>
                            Name: @context.User.Identity.Name |
                            Access level: @context.User.FindFirst(c => c.Type == ClaimTypes.Role).Value |
                        </Authorized>
                    </AuthorizeView>
                    This site is build by <strong><a href="https://www.linkedin.com/in/mauriceslegtenhorst/" target="_blank">Maurice Slegtenhorst</a></strong> with <strong><a href="http://blazor.net" target="_blank">Blazor WebAssembly</a></strong>
                </span>
            </div>

            <div class="content container">
                <div id="spinnerContainer"></div>
                <SfSpinner @ref="Spinner" Target="#spinnerContainer" Label="Loading..." CssClass="e-spin-overlay" />

                <CascadingValue Value="this" Name="@nameof(MainLayoutComponent)">
                    @Body
                </CascadingValue>
            </div>

            <div class="col-lg-4 control-section">
                <SfToast @ref="Toast" ID="toast_type">
                    <ToastPosition X="Center" Y="Top"></ToastPosition>
                </SfToast>
            </div>
        </div>
    </div>

    @code
{
        private SfSpinner Spinner { get; set; }
        private string _spinnerTarget = "#spinnerContainer";

        private SfToast Toast { get; set; }

        public void ShowSpinner()
        {
            Spinner.ShowSpinner(_spinnerTarget);
        }

        public void HideSpinner()
        {
            Spinner.HideSpinner(_spinnerTarget);
        }

        public void ShowToast(ToastModel toastModel)
        {
            Toast.Show(toastModel);
        }

        public void ShowSuccessToast(string message, string title = "Success!")
        {
            ToastModel toastModel;

            toastModel = new ToastModel
            {
                CssClass = "e-toast-success",
                Icon = "e-success toast-icons",
                Title = title,
                Content = message,
                ShowProgressBar = true,
                Width = "40%"
            };

            ShowToast(toastModel);
        }

        public void ShowExceptionToast(Exception exception)
        {
            ToastModel toastModel;

#if DEBUG
            var contentBuilder = new StringBuilder();

            contentBuilder.AppendLine($"{exception.GetType().Name}:");
            contentBuilder.Append(exception.Message);
            contentBuilder.AppendLine();
            contentBuilder.AppendLine("Stack trace:");
            contentBuilder.Append(exception.StackTrace);

            if (exception.InnerException != null)
            {
                contentBuilder.AppendLine($"{exception.InnerException.GetType().Name}:");
                contentBuilder.Append(exception.InnerException.Message);
                contentBuilder.AppendLine("Stack trace:");
                contentBuilder.Append(exception.InnerException.StackTrace);
            }

            toastModel = new ToastModel
            {
                CssClass = "e-toast-danger",
                Icon = "e-error toast-icons",
                Title = "An Exception has occurred",
                Content = contentBuilder.ToString(),
                ShowCloseButton = true,
                TimeOut = 0,
                Width = "40%"
            };
#else
toastModel = new ToastModel
{
    CssClass = "e-toast-danger",
    Title = "An error has occured ;(",
    Content = "Detail are held secret",
    ShowCloseButton = true,
    TimeOut = 0,
    Width = "40%"
};
#endif

            ShowToast(toastModel);
        }
    }