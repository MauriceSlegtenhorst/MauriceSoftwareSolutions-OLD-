@inject IDialogService _dialogService

<SfSpinner @ref="spinner" Target="#dialog-content" Label="@loadingMessage" Type="SpinnerType.Fabric" />

@if (_showForm == true)
{
    <div class="row">
        <div class="col-xl-4 col-lg-4 col-md-4 col-sm-12">
            <div class="p-3">
                <SfTextBox Type="InputType.Text" ShowClearButton="true" @bind-Value="@_credit.LinkToImage" Multiline="true" @onkeyup="StateHasChanged"
                           Placeholder="@PropertyNameConverter.ConvertFromProperty(nameof(_credit.LinkToImage))" FloatLabelType="FloatLabelType.Always" />
            </div>

            <div class="d-flex justify-content-center">
                <img src="@(_credit.LinkToImage)" />
            </div>
        </div>
        <div class="col-xl-8 col-lg-8 col-md-8 col-sm-12">
            <SfSplitter Orientation="Syncfusion.Blazor.Layouts.Orientation.Horizontal" CssClass="@splitterPaneCss" Height="auto">
                <SplitterPanes>
                    <SplitterPane Size="50%" Min="30%" Collapsible="true" CssClass="p-3">
                        <ContentTemplate>
                            <SfTextBox Type="InputType.Text" ShowClearButton="true" @bind-Value="@_credit.Title" Multiline="true" @onkeyup="StateHasChanged"
                                       Placeholder="@PropertyNameConverter.ConvertFromProperty(nameof(_credit.Title))" FloatLabelType="FloatLabelType.Always" />
                        </ContentTemplate>
                    </SplitterPane>
                    <SplitterPane Size="50%" Min="30%" Collapsible="true" CssClass="p-3">
                        <ContentTemplate>
                            @((MarkupString)_credit.Title)
                        </ContentTemplate>
                    </SplitterPane>
                </SplitterPanes>
            </SfSplitter>

            <SfSplitter Orientation="Syncfusion.Blazor.Layouts.Orientation.Horizontal" CssClass="@splitterPaneCss" Height="auto">
                <SplitterPanes>
                    <SplitterPane Size="50%" Min="30%" Collapsible="true" CssClass="p-3">
                        <ContentTemplate>
                            <SfTextBox Type="InputType.Text" ShowClearButton="true" @bind-Value="@_credit.SubTitle" Multiline="true" @onkeyup="StateHasChanged"
                                       Placeholder="@PropertyNameConverter.ConvertFromProperty(nameof(_credit.SubTitle))" FloatLabelType="FloatLabelType.Always" />
                        </ContentTemplate>
                    </SplitterPane>
                    <SplitterPane Size="50%" Min="30%" Collapsible="true" CssClass="p-3">
                        <ContentTemplate>
                            @((MarkupString)_credit.SubTitle)
                        </ContentTemplate>
                    </SplitterPane>
                </SplitterPanes>
            </SfSplitter>

            <SfSplitter Orientation="Syncfusion.Blazor.Layouts.Orientation.Horizontal" CssClass="@splitterPaneCss" Height="auto">
                <SplitterPanes>
                    <SplitterPane Size="50%" Min="30%" Collapsible="true" CssClass="p-3">
                        <ContentTemplate>
                            <SfTextBox Type="InputType.Text" ShowClearButton="true" @bind-Value="@_credit.GotFrom" Multiline="true" @onkeyup="StateHasChanged"
                                       Placeholder="@PropertyNameConverter.ConvertFromProperty(nameof(_credit.GotFrom))" FloatLabelType="FloatLabelType.Always" />
                        </ContentTemplate>
                    </SplitterPane>
                    <SplitterPane Size="50%" Min="30%" Collapsible="true" CssClass="p-3">
                        <ContentTemplate>
                            @((MarkupString)_credit.GotFrom)
                        </ContentTemplate>
                    </SplitterPane>
                </SplitterPanes>
            </SfSplitter>

            <SfSplitter Orientation="Syncfusion.Blazor.Layouts.Orientation.Horizontal" CssClass="@splitterPaneCss" Height="auto">
                <SplitterPanes>
                    <SplitterPane Size="50%" Min="30%" Collapsible="true" CssClass="p-3">
                        <ContentTemplate>
                            <SfTextBox Type="InputType.Text" ShowClearButton="true" @bind-Value="@_credit.MadeBy" Multiline="true" @onkeyup="StateHasChanged"
                                       Placeholder="@PropertyNameConverter.ConvertFromProperty(nameof(_credit.MadeBy))" FloatLabelType="FloatLabelType.Always" />
                        </ContentTemplate>
                    </SplitterPane>
                    <SplitterPane Size="50%" Min="30%" Collapsible="true" CssClass="p-3">
                        <ContentTemplate>
                            @((MarkupString)_credit.MadeBy)
                        </ContentTemplate>
                    </SplitterPane>
                </SplitterPanes>
            </SfSplitter>

            <SfSplitter Orientation="Syncfusion.Blazor.Layouts.Orientation.Horizontal" CssClass="@splitterPaneCss" Height="auto">
                <SplitterPanes>
                    <SplitterPane Size="50%" Min="30%" Collapsible="true" CssClass="p-3">
                        <ContentTemplate>
                            <SfTextBox Type="InputType.Text" ShowClearButton="true" @bind-Value="@_credit.Description" Multiline="true" @onkeyup="StateHasChanged"
                                       Placeholder="@PropertyNameConverter.ConvertFromProperty(nameof(_credit.Description))" FloatLabelType="FloatLabelType.Always" />
                        </ContentTemplate>
                    </SplitterPane>
                    <SplitterPane Size="50%" Min="30%" Collapsible="true" CssClass="p-3">
                        <ContentTemplate>
                            @((MarkupString)_credit.Description)
                        </ContentTemplate>
                    </SplitterPane>
                </SplitterPanes>
            </SfSplitter>
        </div>
    </div>

    <div class="row justify-content-end">
        <SfButton CssClass="e-btn e-primary" OnClick="SubmitForm"> <span class="oi oi-check" /> </SfButton>
        <SfButton CssClass="e-btn" OnClick="Cancel"> <span class="oi oi-x" /> </SfButton>
    </div>
}
else
{
    if (isLoading == true)
    {

        <div class="col-12">
            content content fhdjksfnsk
        </div>
    }

}

@code {
    [CascadingParameter]
    private DialogParameters _dialogParameters { get; set; }

    [CascadingParameter]
    private DialogServiceComponent _dialogServiceComponent { get; set; }

    private SfSpinner spinner;
    private string loadingMessage;
    private bool isLoading = true;
    private string splitterPaneCss = "theme";
    private bool _showForm { get; set; } = true;
    private int _formId { get; set; }
    private PLCredit _credit { get; set; }

    protected override void OnInitialized()
    {
        _formId = _dialogParameters.Get<int>("FormId");
        _credit = _dialogParameters.Get<PLCredit>("Credit");
        _dialogServiceComponent.SetTitle($"Edit credit");

        base.OnInitialized();
    }

    private void SubmitForm()
    {
        _showForm = false;

        spinner.ShowSpinner("#dialog-content");
        loadingMessage = "Test test test";
    }

    private void Done()
    {
        _dialogService.Close(DialogResult.Ok("Form submitted!"));
    }

    private void Cancel()
    {
        _dialogService.Close(DialogResult.Cancel());
    }
}
