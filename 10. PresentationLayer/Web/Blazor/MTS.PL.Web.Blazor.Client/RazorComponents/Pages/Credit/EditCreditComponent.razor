@inject IDialogService _dialogService

<SfSpinner @bind-Visible="isSubmitting" Label="Loading..." CssClass="e-spin-overlay" Type="SpinnerType.Fabric" ZIndex="99" />

<div class="row mb-2">
    <div class="col-xl-4 col-lg-4 col-md-4 col-sm-12">
        <div class="p-3">
            <SfTextBox Type="InputType.Text" ShowClearButton="true" @bind-Value="@_credit.LinkToImage" Multiline="true" @onkeyup="StateHasChanged"
                        Placeholder="@PropertyNameConverter.ConvertFromProperty(nameof(_credit.LinkToImage))" FloatLabelType="FloatLabelType.Always" />
        </div>

        <div class="d-flex justify-content-center">
            <img src="@(_credit.LinkToImage)" />
        </div>
    </div>
    <div class="col-xl-8 col-lg-8 col-md-8 col-sm-12">
        <SfSplitter Orientation="Syncfusion.Blazor.Layouts.Orientation.Horizontal" CssClass="@splitterPaneCss" Height="auto">
            <SplitterPanes>
                <SplitterPane Size="50%" Min="30%" Collapsible="true" CssClass="p-3">
                    <ContentTemplate>
                        <SfTextBox Type="InputType.Text" ShowClearButton="true" @bind-Value="@_credit.Title" Multiline="true" @onkeyup="StateHasChanged"
                                    Placeholder="@PropertyNameConverter.ConvertFromProperty(nameof(_credit.Title))" FloatLabelType="FloatLabelType.Always" />
                    </ContentTemplate>
                </SplitterPane>
                <SplitterPane Size="50%" Min="30%" Collapsible="true" CssClass="p-3">
                    <ContentTemplate>
                        @((MarkupString)_credit.Title)
                    </ContentTemplate>
                </SplitterPane>
            </SplitterPanes>
        </SfSplitter>

        <SfSplitter Orientation="Syncfusion.Blazor.Layouts.Orientation.Horizontal" CssClass="@splitterPaneCss" Height="auto">
            <SplitterPanes>
                <SplitterPane Size="50%" Min="30%" Collapsible="true" CssClass="p-3">
                    <ContentTemplate>
                        <SfTextBox Type="InputType.Text" ShowClearButton="true" @bind-Value="@_credit.SubTitle" Multiline="true" @onkeyup="StateHasChanged"
                                    Placeholder="@PropertyNameConverter.ConvertFromProperty(nameof(_credit.SubTitle))" FloatLabelType="FloatLabelType.Always" />
                    </ContentTemplate>
                </SplitterPane>
                <SplitterPane Size="50%" Min="30%" Collapsible="true" CssClass="p-3">
                    <ContentTemplate>
                        @((MarkupString)_credit.SubTitle)
                    </ContentTemplate>
                </SplitterPane>
            </SplitterPanes>
        </SfSplitter>

        <SfSplitter Orientation="Syncfusion.Blazor.Layouts.Orientation.Horizontal" CssClass="@splitterPaneCss" Height="auto">
            <SplitterPanes>
                <SplitterPane Size="50%" Min="30%" Collapsible="true" CssClass="p-3">
                    <ContentTemplate>
                        <SfTextBox Type="InputType.Text" ShowClearButton="true" @bind-Value="@_credit.GotFrom" Multiline="true" @onkeyup="StateHasChanged"
                                    Placeholder="@PropertyNameConverter.ConvertFromProperty(nameof(_credit.GotFrom))" FloatLabelType="FloatLabelType.Always" />
                    </ContentTemplate>
                </SplitterPane>
                <SplitterPane Size="50%" Min="30%" Collapsible="true" CssClass="p-3">
                    <ContentTemplate>
                        @((MarkupString)_credit.GotFrom)
                    </ContentTemplate>
                </SplitterPane>
            </SplitterPanes>
        </SfSplitter>

        <SfSplitter Orientation="Syncfusion.Blazor.Layouts.Orientation.Horizontal" CssClass="@splitterPaneCss" Height="auto">
            <SplitterPanes>
                <SplitterPane Size="50%" Min="30%" Collapsible="true" CssClass="p-3">
                    <ContentTemplate>
                        <SfTextBox Type="InputType.Text" ShowClearButton="true" @bind-Value="@_credit.MadeBy" Multiline="true" @onkeyup="StateHasChanged"
                                    Placeholder="@PropertyNameConverter.ConvertFromProperty(nameof(_credit.MadeBy))" FloatLabelType="FloatLabelType.Always" />
                    </ContentTemplate>
                </SplitterPane>
                <SplitterPane Size="50%" Min="30%" Collapsible="true" CssClass="p-3">
                    <ContentTemplate>
                        @((MarkupString)_credit.MadeBy)
                    </ContentTemplate>
                </SplitterPane>
            </SplitterPanes>
        </SfSplitter>

        <SfSplitter Orientation="Syncfusion.Blazor.Layouts.Orientation.Horizontal" CssClass="@splitterPaneCss" Height="auto">
            <SplitterPanes>
                <SplitterPane Size="50%" Min="30%" Collapsible="true" CssClass="p-3">
                    <ContentTemplate>
                        <SfTextBox Type="InputType.Text" ShowClearButton="true" @bind-Value="@_credit.Description" Multiline="true" @onkeyup="StateHasChanged"
                                    Placeholder="@PropertyNameConverter.ConvertFromProperty(nameof(_credit.Description))" FloatLabelType="FloatLabelType.Always" />
                    </ContentTemplate>
                </SplitterPane>
                <SplitterPane Size="50%" Min="30%" Collapsible="true" CssClass="p-3">
                    <ContentTemplate>
                        @((MarkupString)_credit.Description)
                    </ContentTemplate>
                </SplitterPane>
            </SplitterPanes>
        </SfSplitter>
    </div>
</div>

<div class="row justify-content-end m-0">
    <SfButton CssClass="e-btn e-primary" OnClick="SubmitForm"> <span class="oi oi-check" /> </SfButton>
    <SfButton CssClass="e-btn" OnClick="Cancel"> <span class="oi oi-x" /> </SfButton>
</div>

@code {
    [CascadingParameter]
    private DialogParameters _dialogParameters { get; set; }

    [CascadingParameter]
    private DialogServiceComponent _dialogServiceComponent { get; set; }
    private bool isSubmitting;
    private string splitterPaneCss = "theme";
    private int _formId { get; set; }
    private PLCredit _credit { get; set; }

    protected override void OnInitialized()
    {
        _credit = _dialogParameters.Get<PLCredit>("Credit");

        base.OnInitialized();
    }

    private void SubmitForm()
    {
        isSubmitting = true;
    }

    private void Done()
    {
        _dialogService.Close(DialogResult.Ok($"{_credit.Title} edit success!"));
    }

    private void Cancel()
    {
        _dialogService.Close(DialogResult.Cancel());
    }
}
