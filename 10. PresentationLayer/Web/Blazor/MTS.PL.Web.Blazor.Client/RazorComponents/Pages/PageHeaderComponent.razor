@inject IEditPageService _editPageService

<div class="page-header">
    <h1>@PageName</h1>
    <h4>@Subtitle</h4>
    @if (PageIsEditable == true)
    {
        <AuthorizeView Roles="@_roles">
            <Authorized>
                <SfButton CssClass="e-small" OnClick="ToggleEdit">@_editMode</SfButton>
            </Authorized>
        </AuthorizeView>
    }
</div>


@code {
    [Parameter]
    public string PageName { get; set; }

    [Parameter]
    public string Subtitle { get; set; }

    [Parameter]
    public bool PageIsEditable { get; set; }

    private string _editMode;

    private string _roles = $"{Constants.Security.ADMINISTRATOR},{Constants.Security.PRIVILEGED_EMPLOYEE},{Constants.Security.EMPLOYEE}";

    protected override Task OnInitializedAsync()
    {
        _editMode = (_editPageService.GetEditMode() ? "Save" : "Edit");

        return base.OnInitializedAsync();
    }

    private void ToggleEdit()
    {
        if(PageIsEditable == true)
        {
            _editMode = (_editPageService.GetEditMode() ? "Edit" : "Save");
            _editPageService.ToggleEditMode();
        }
    }
}
